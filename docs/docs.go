// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/point/logs/{userID}": {
            "get": {
                "security": [
                    {
                        "Systoken": []
                    }
                ],
                "description": "使用模組: user-profile",
                "summary": "取得用戶積分異動紀錄",
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "UserID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "用戶積分異動紀錄",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.PointLog"
                            }
                        }
                    }
                }
            }
        },
        "/point/wallet": {
            "post": {
                "security": [
                    {
                        "Systoken": []
                    }
                ],
                "description": "使用模組: user \u003c/br\u003e 新會員加入會員系統時使用",
                "summary": "新增積分錢包",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "userID",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/point/wallet/{userID}": {
            "get": {
                "security": [
                    {
                        "Systoken": []
                    }
                ],
                "description": "使用模組: user-profile",
                "summary": "取得積分錢包餘額",
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "UserID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "用戶積分錢包餘額",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Systoken": []
                    }
                ],
                "description": "使用模組: fortune-recommend, mission, user, reward",
                "summary": "變更積分",
                "parameters": [
                    {
                        "type": "string",
                        "name": "changeType",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "opCode",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "name": "point",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": " ",
                        "name": "UserID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.UpdatePointRes"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.PointLog": {
            "type": "object",
            "properties": {
                "before": {
                    "type": "number"
                },
                "createdAt": {
                    "type": "string"
                },
                "difference": {
                    "type": "number"
                },
                "opCode": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "domain.UpdatePointRes": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                }
            }
        }
    },
    "securityDefinitions": {
        "Systoken": {
            "type": "apiKey",
            "name": "Systoken",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "point 模組",
	Description: "積分錢包",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
